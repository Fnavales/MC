\relax 
\providecommand\hyper@newdestlabel[2]{}
\catcode `"\active 
\catcode `<\active 
\catcode `>\active 
\@nameuse{es@quoting}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\select@language{spanish}
\@writefile{toc}{\select@language{spanish}}
\@writefile{lof}{\select@language{spanish}}
\@writefile{lot}{\select@language{spanish}}
\@writefile{toc}{\contentsline {section}{\numberline {1}Practica 1: G = (V,T,P,S), donde V = {S,A,B}, T = {a,b}, el s\IeC {\'\i }mbolo de partida es S y las reglas son:}{3}{section.1}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Practica 2: Determinar si la gram\IeC {\'a}tica G = (\{S, A, B\}, \{a, b, c, d\}, P, S) genera un lenguaje de tipo 3 donde P es el conjunto de reglas de producci\IeC {\'o}n:}{4}{section.2}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Practica 3: Dise\IeC {\~n}ar un aut\IeC {\'o}mata finito determin\IeC {\'\i }stico que acepte cadenas que contienen las subcadenas '0110' y '1000'. Las subcadenas pueden aparecer juntas o separadas, tambi\IeC {\'e}n pueden contener m\IeC {\'a}s s\IeC {\'\i }mbolos (0+1) delante o detras de ellas.}{6}{section.3}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.1}{\ignorespaces NonDeterministic finite automaton(NFA)}}{6}{figure.1}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.2}{\ignorespaces Deterministic finite automaton(DFA)}}{7}{figure.2}}
